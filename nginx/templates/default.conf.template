server {
  listen 3000;

  location ~* ^${HTTP_PREFIX}(/assets/.*)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    root /blog/dist;
    try_files $1 =404;
  }

  location ~ ^${HTTP_PREFIX}(.*) {
    root /blog/dist;
    try_files $1.html $1/index.html =404;
  }

  # ----------------------------------------------------------------------
  # | Compression                                                        |
  # ----------------------------------------------------------------------

  # https://github.com/h5bp/server-configs-nginx/blob/master/h5bp/web_performance/compression.conf

  # Enable gzip compression.
  # Default: off
  gzip on;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and CPU usage, offering about 75%
  # reduction for most ASCII files (almost identical to level 9).
  # Default: 1
  gzip_comp_level 5;

  # Don't compress anything that's already small and unlikely to shrink much if
  # at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  # Default: 20
  gzip_min_length 256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  # Default: off
  gzip_proxied any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  # Default: off
  gzip_vary on;

  # Compress all output labeled with one of the following MIME-types.
  # `text/html` is always compressed by gzip module.
  # Default: text/html
  gzip_types
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/markdown
    text/plain
    text/xml;
}
